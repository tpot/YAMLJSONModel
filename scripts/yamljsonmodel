#!/usr/bin/env python

import sys, yaml
from jinja2 import Environment, PackageLoader, select_autoescape

import pprint

def generate_template(kind, variables):
    """Generate a JSONModel header from YAML configuration."""

    env = Environment(
        loader = PackageLoader('yamljsonmodel', 'templates')
        )

    template = env.get_template('%s/model.h' % kind)

    pprint.pprint(variables)
    print(template.render(**variables))

def process_file(filename): 
    """Process a YAML file through the template engine."""
    with open(filename, 'r') as stream:
        y = yaml.load(stream)
        for obj in y:
            pprint.pprint(obj)
            generate_template(obj['kind'], obj)

if __name__ == '__main__':            
    for filename in sys.argv[1:]:
        process_file(filename)
